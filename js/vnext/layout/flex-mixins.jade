mixin cellValue(cell)
  if (cell.html)
    != cell.html
  else
    = cell.value

mixin mixinHeadCell(cell, escapeAttr)
  - var attr = escapeAttr(cell.attributes)
  if attr.colspan > 1
    .nested-column-container(style=`flex-grow: ${attr.colspan};`)
      div.th.flex-cell&attributes(attr)(class=cell.classes)
        +cellValue(cell)
      if (cell.hasChild)
        .nested-column-placeholder
  else
    div.th.flex-cell&attributes(attr)(class=cell.classes)
      +cellValue(cell)
    if (cell.hasChild)
      .nested-column-placeholder

mixin mixinCell(cell, escapeAttr)
  - var attr = escapeAttr(cell.attributes)
  div.td.flex-cell&attributes(attr)(class=cell.classes)
    +cellValue(cell)

mixin mixinSection(section, cell, escapeAttr)
  case section
    when 'head'
      +mixinHeadCell(cell, escapeAttr)
    when 'body'
    when 'foot'
      +mixinCell(cell, escapeAttr)

mixin mixinRow(row, section, escapeAttr)
  - var attr = escapeAttr(row.attributes)

  div.tr.flex-row&attributes(attr)(class=row.classes)
    if row.html || row.view
      each cell in row.cells 
        +mixinSection(section, cell, escapeAttr)
    else 
      - var groups = [], cellByGroup = (row.cells || []).reduce((memo, cell) => {
      -   var group = cell.group;
      -   !memo[group] && (memo[group] = [], groups.push(group));
      -   memo[group].push(cell);
      -   return memo;
      - }, {});

      each group in groups 
        div(class=`${group}-group-container flex-column-group-container`)
          div(class=`${group}-group flex-column-group`)
            each cell in cellByGroup[group] 
              +mixinSection(section, cell, escapeAttr)


mixin mixinRows(rows, group, escapeAttr)
  each row in rows || []
    +mixinRow(row, group, escapeAttr)